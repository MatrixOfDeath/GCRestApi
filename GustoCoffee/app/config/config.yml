imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@GCHomeBundle/Resources/config/services.yml" }
    - { resource: "@GCEvenementBundle/Resources/config/services.yml" }
    - { resource: "@GCReservationBundle/Resources/config/services.yml" }
    - { resource: "@GCUserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    locales: [fr, en]

framework:
    #esi: ~
    translator: ~
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enable_annotations: false }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets:
        json_manifest_path: '%kernel.project_dir%/web/build/manifest.json'
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        locales: '%locales%'

# Assetic configuration
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

jms_i18n_routing:
    default_locale: fr
    locales: [fr, en]
    strategy: prefix

jms_di_extra:
    locations:
        all_bundles: false
        bundles: [AppBundle, UserBundle, HomeBundle, EvenementBundle, ReservationBundle]
        directories: ["%kernel.root_dir%/../src"]

jms_translation:
    configs:
        app:
            dirs: ["%kernel.root_dir%", "%kernel.root_dir%/../src"]
            output_dir: "%kernel.root_dir%/Resources/translations"
            ignored_domains: [routes]
            excluded_names: ["*TestCase.php", "*Test.php"]
            excluded_dirs: [cache, data, logs]
            extractors: [alias_of_the_extractor]

nelmio_api_doc: ~

fos_rest:
    routing_loader:
        default_format: json                           # All responses should be JSON formated
        include_format: false                           # We do not include format in request, so that all responses
    format_listener:
        enabled: true
        rules:
            # setting fallback_format to json means that instead of considering the next rule in case of a priority mismatch, json will be used
            #- { path: '^/', host: 'api.%domain%', priorities: ['json', 'xml'], fallback_format: json, prefer_extension: false }
            # you can specifically target the exception controller
            - { path: '^/api', priorities: ['json', 'xml'], fallback_format: json, prefer_extension: false }
            #- { priorities: ['json', 'xml'], fallback_format: json, prefer_extension: false }
            - { path: '^/', stop: true }
    view:
        view_response_listener: true


sensio_framework_extra:
    router:      { annotations: true }
    request:     { converters: true, auto_convert: true }
    view:        { annotations: true }
    cache:       { annotations: true }
    security:    { annotations: true }
    psr_message: { enabled: false } # Defaults to true if the PSR-7 bridge is installed

#Configuration of our BackOffice
easy_admin:
    site_name: '<img alt="GustoCoffee" width="100px" src="/img/gc_design.png" /> BackOffice'
    design:
        assets:
            favicon: '/img/gc_design.png'
    entities:
        Personne:
            class: AppBundle\Entity\Personne
            label: 'Utilisateurs'
            list:
                title: 'Les utilisateurs'
        Produit:
            class: AppBundle\Entity\Produit
            label: 'Produits'
            list:
                title: 'Les Produits'

        Commande:
            class: AppBundle\Entity\Commande
            label: 'Les Commandes'
            list:
                title: 'Les Commandes'

        Reservation:
            class: AppBundle\Entity\Reservation
            label: 'Les dernières réservation'
            list:
                title: 'Les Réservations'
        Magasin:
            class: AppBundle\Entity\Magasin
            label: 'Les Magasins'
            list:
                title: 'Les Magasins'
        JoursOuvert:
            class: AppBundle\Entity\JoursOuvert
            label: 'Les jours d''ouverture'
            list:
                title: 'Les jours d''ouverture'

fos_user:
    db_driver: orm
    firewall_name: api                                 # Seems to be used when registering user/reseting password,
                                                        # but since there is no "login", as so it seems to be useless in
                                                        # our particular context, but still required by "FOSUserBundle"
    user_class: AppBundle\Entity\Personne
    registration:
        form:
            type: AppBundle\Form\RegistrationType
        confirmation:
            enabled: true
    profile:
        form:
            type: AppBundle\Form\ProfileFormType
            name: fos_user_profile_form
    from_email:
        address: "%mailer_user%"
        sender_name: "L'Équipe Gusto Coffee"

fos_oauth_server:
    db_driver:           orm
    client_class:        AppBundle\Entity\Client
    access_token_class:  AppBundle\Entity\AccessToken
    refresh_token_class: AppBundle\Entity\RefreshToken
    auth_code_class:     AppBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username             # This property will be used when valid credentials are given to load the user upon access token creation
